- name: install shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: install maven 
    ansible.builtin.dnf:
      name: maven
      state: present

  - name: add user
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download shipping application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp

  - name: Extract shipping application
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file 
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: install mysql client
    ansible.builtin.dnf:
      name: mysql
      state: present

  # - name: check cities schema exists or not 
  #   ansible.builtin.command: 
  - name: Check if 'cities' database exists
    community.mysql.mysql_info:
      filter: databases
    register: dbs

  - name: Debug result
    debug:
      msg: "'cities' exists!" 
    when: "'cities' in dbs.databases"
